[["index.html", "Survival basics Chapter 1 A brief intro to Survival Analysis", " Survival basics Dr.Â Susan Simmons 2023-03-08 Chapter 1 A brief intro to Survival Analysis "],["setting-up-r.html", "Chapter 2 Setting up R", " Chapter 2 Setting up R Welcome to R! For this introductory workshop, we will be using R Markdown. This might take a bit of getting used to it, but it is a great way to run R code and make comments so you know what you did!! First thing that you will need to do is install the packages you need. The data set, as well as many of the commands is in a library called survival (good name, right!). We will also be using a powerful graphing software called ggplot (boy, we could have up to 5 workshops on this and still only scratch the surface of what this can do!) and a few extra libraries to make things look nice. First, in the console, you will need to install the packages onto your local drive. To do so, type the commands: install.packages(survival) install.packages(ggplot2) install.packages(gridExtra) install.packages(survminer) You will only need to do this once. Once they have been installed, you now have them on your local drive. Now lets open a new R Markdown notebook. Go to File -&gt; New File -&gt; R Markdown This will open an R Markdown file for you. Go ahead and run some of the R Chunks to see what is going on here. After you are comfortable, lets change the first chunk to do what we need it to do. We will need to library the survival and ggplot2 package, as well as the other packages we will need. See below for code to do this. Every time you open this document, and want to run the codes contained within, you will need to do these commands first. library(survival) library(ggplot2) library(gridExtra) library(survminer) Be sure to hit the little green run button in the right hand corner to run this code. Feel free to put comments before or after this chunk to let you know what you just did!! Now lets explore the data set we will be using (as any good data scientist, you must KNOW your data first!!). Go ahead and ask for a summary of the data set lung. summary(lung) ## inst time status age ## Min. : 1.00 Min. : 5.0 Min. :1.000 Min. :39.00 ## 1st Qu.: 3.00 1st Qu.: 166.8 1st Qu.:1.000 1st Qu.:56.00 ## Median :11.00 Median : 255.5 Median :2.000 Median :63.00 ## Mean :11.09 Mean : 305.2 Mean :1.724 Mean :62.45 ## 3rd Qu.:16.00 3rd Qu.: 396.5 3rd Qu.:2.000 3rd Qu.:69.00 ## Max. :33.00 Max. :1022.0 Max. :2.000 Max. :82.00 ## NA&#39;s :1 ## sex ph.ecog ph.karno pat.karno ## Min. :1.000 Min. :0.0000 Min. : 50.00 Min. : 30.00 ## 1st Qu.:1.000 1st Qu.:0.0000 1st Qu.: 75.00 1st Qu.: 70.00 ## Median :1.000 Median :1.0000 Median : 80.00 Median : 80.00 ## Mean :1.395 Mean :0.9515 Mean : 81.94 Mean : 79.96 ## 3rd Qu.:2.000 3rd Qu.:1.0000 3rd Qu.: 90.00 3rd Qu.: 90.00 ## Max. :2.000 Max. :3.0000 Max. :100.00 Max. :100.00 ## NA&#39;s :1 NA&#39;s :1 NA&#39;s :3 ## meal.cal wt.loss ## Min. : 96.0 Min. :-24.000 ## 1st Qu.: 635.0 1st Qu.: 0.000 ## Median : 975.0 Median : 7.000 ## Mean : 928.8 Mean : 9.832 ## 3rd Qu.:1150.0 3rd Qu.: 15.750 ## Max. :2600.0 Max. : 68.000 ## NA&#39;s :47 NA&#39;s :14 You can see how many variables you have, the range of each variable and how many NAs there are (NAs can be a problem in some analyses). Lets take a look at a bar plot for status. ggplot(lung,aes(x=factor(status)))+ geom_bar(stat=&quot;count&quot;, fill=&quot;blue&quot;) Just a little more exploration (if you are doing an analysis, you should explore more than this!). p1&lt;-ggplot(lung,aes(x=factor(status),y=time)) + geom_boxplot() p2&lt;-ggplot(lung, aes(x=factor(status),y=age)) + geom_boxplot() p3&lt;-ggplot(lung, aes(x=factor(status),y=ph.karno)) + geom_boxplot() p4&lt;-ggplot(lung, aes(x=factor(status),y=pat.karno)) + geom_boxplot() p5&lt;-ggplot(lung, aes(x=factor(status),y=meal.cal)) + geom_boxplot() p6&lt;-ggplot(lung, aes(x=factor(status),y=wt.loss)) + geom_boxplot() grid.arrange(p1, p2, p3, p4, p5, p6, nrow = 3) ggplot(lung, aes(x=factor(status),fill = factor(ph.ecog))) + geom_bar(position=&quot;fill&quot;) "],["visualizing-survival-curves.html", "Chapter 3 Visualizing survival curves", " Chapter 3 Visualizing survival curves Lets first look at our little survival data (to see how this works) and then we will look at the actual data. The following code creates the data: simple=data.frame(matrix(c(7,8,10,3,2,3,1,1,0,1,1,0),ncol=2)) colnames(simple)=c(&quot;tenure&quot;,&quot;censored&quot;) simple ## tenure censored ## 1 7 1 ## 2 8 1 ## 3 10 0 ## 4 3 1 ## 5 2 1 ## 6 3 0 To calculate the survival probabilities, we will use the survfit command. simple_km=survfit(Surv(tenure, censored==1)~1,data = simple) summary(simple_km) ## Call: survfit(formula = Surv(tenure, censored == 1) ~ 1, data = simple) ## ## time n.risk n.event survival std.err lower 95% CI upper 95% CI ## 2 6 1 0.833 0.152 0.5827 1 ## 3 5 1 0.667 0.192 0.3786 1 ## 7 3 1 0.444 0.222 0.1668 1 ## 8 2 1 0.222 0.192 0.0407 1 Now lets plot this survival curve. ggsurvplot(simple_km) Ok, so now lets get to the real data: lung_simple=survfit(Surv(time, status==2)~1,data = lung) ggsurvplot(lung_simple) We can also do a stratified survival curve. To do a stratified analysis, the variable you will stratify on must be categorical!! This is because you are creating a curve for each level of this variable. Lets take a look at the different survival curves for sex (remember 1 is male and 2 is female). lung_sex=survfit(Surv(time, status==2)~sex,data = lung) ggsurvplot(lung_sex) You can test if there is a significant difference in the survival curves by (null hypothesis is that there is no difference in the survival curves and the alternative is that there is a significant difference in the survival curves): survdiff(Surv(time, status==2)~sex, data=lung) ## Call: ## survdiff(formula = Surv(time, status == 2) ~ sex, data = lung) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## sex=1 138 112 91.6 4.55 10.3 ## sex=2 90 53 73.4 5.68 10.3 ## ## Chisq= 10.3 on 1 degrees of freedom, p= 0.001 Some neat things to plot here: ggsurvplot(lung_sex,conf.int = T,pval=T,risk.table = T,risk.table.col=&quot;sex&quot;, legend.labs=c(&quot;Male&quot;,&quot;Female&quot;),risk.table.height = 0.4) "],["cox-regression.html", "Chapter 4 Cox regression", " Chapter 4 Cox regression I am not sure if we will get this far (theres a lot to cover in survival curves). Cox regression is one of the most popular methods of regression in survival analysis. Remember, we are trying to discover what variables have an impact on the length of time til an event occurs. Cox proportional hazard regression models the hazard rate (not survival probabilities). The hazard rate is the instantaneous event rate for the risk set at time t. There is A LOT involved in this modeling, but we will at least demonstrate how to do this: lung_ph= coxph(Surv(time,status==2) ~ sex + factor(ph.ecog) , data=lung) summary(lung_ph) ## Call: ## coxph(formula = Surv(time, status == 2) ~ sex + factor(ph.ecog), ## data = lung) ## ## n= 227, number of events= 164 ## (1 observation deleted due to missingness) ## ## coef exp(coef) se(coef) z Pr(&gt;|z|) ## sex -0.5449 0.5799 0.1681 -3.241 0.00119 ** ## factor(ph.ecog)1 0.4182 1.5192 0.1994 2.097 0.03602 * ## factor(ph.ecog)2 0.9475 2.5792 0.2248 4.216 2.49e-05 *** ## factor(ph.ecog)3 2.0485 7.7565 1.0269 1.995 0.04605 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## exp(coef) exp(-coef) lower .95 upper .95 ## sex 0.5799 1.7245 0.4171 0.8062 ## factor(ph.ecog)1 1.5192 0.6582 1.0277 2.2459 ## factor(ph.ecog)2 2.5792 0.3877 1.6602 4.0067 ## factor(ph.ecog)3 7.7565 0.1289 1.0366 58.0390 ## ## Concordance= 0.642 (se = 0.025 ) ## Likelihood ratio test= 29.5 on 4 df, p=6e-06 ## Wald test = 30.7 on 4 df, p=4e-06 ## Score (logrank) test = 32.71 on 4 df, p=1e-06 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
